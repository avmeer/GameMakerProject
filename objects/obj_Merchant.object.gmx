<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Merchant</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x1 = view_xview[0] + 318;
y1 = view_yview[0] + 25;
x2 = x1 + 166 * 2;
y2 = y1 + 360;
xOffset = 40;
yOffset = 40;
initOff = 24 * 2;
initSpace = 40 * 2;
boxDimension = 32 * 2;

maxItems = 16;

randomize();


potentialItemsArray[0] = obj_Weapon;
potentialItemsArray[1] = obj_testWeapon;
potentialItemsArray[2] = obj_Helmet;

itemsToSell[0,0] = -1;

for (i = 0; i &lt; maxItems / 4; i++){
    for (j = 0; j &lt; maxItems / 4; j++){
        itemIndex = random_range(0,3);
        itemsToSell[i,j] = instance_create(-10,-10, potentialItemsArray[itemIndex]);
    }
}

interacting = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (point_distance(obj_Player.x, obj_Player.y, x, y) &gt; 100){
    interacting = false;
}

if(interacting){
    foundOne = false;
    for (i = 0; i &lt; 4; i++){
        for (j = 0; j &lt; 4; j++){
            boxCenterX = x1 + initOff + (i * initSpace);
            boxCenterY = y1 + initOff + (j * initSpace);
            if(scr_MouseInBox(boxCenterX, boxCenterY, boxDimension) &amp;&amp; itemsToSell[i,j] != -1){
                foundOne = true;
                displayItemInfo = true;
                itemToDisplay = itemsToSell[i,j];
            }
            else if (i == 3 &amp;&amp; j == 3 &amp;&amp; foundOne = false){
                displayItemInfo = false;
                itemToDisplay = -1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(interacting == true){
    draw_set_color(c_black);
    draw_set_alpha(0.8);
    draw_rectangle(x1,y1,x2,y2,0);
    draw_set_alpha(1);
    
    for (i = 0; i &lt; maxItems / 4; i++){
        for (j = 0; j &lt; maxItems / 4; j++){
            draw_sprite_ext(spr_Border,0,x1 + initOff + (i * initSpace), y1 + initOff + (j * initSpace),2,2,0,c_white,1);
            if (itemsToSell[i] != -1){
                draw_sprite_ext(itemsToSell[i,j].sprite_index,0,x1 + initOff + (i * initSpace), y1 + initOff + (j * initSpace),2,2,0,c_white,1);
                draw_set_color(c_white);
            }
        }
    }
    
    if(displayItemInfo){
        if(itemToDisplay.itemType == equipSlots.WEAPON){
            draw_set_color(c_black);
            draw_rectangle(mouse_x, mouse_y, mouse_x + 200, mouse_y + 50,0);
            draw_set_color(c_white);
            draw_text(mouse_x + 10, mouse_y, "Damage: " + string(itemToDisplay.damage));
            if (itemToDisplay.fireRate == 0){
                draw_text(mouse_x + 10, mouse_y + 20, "Fire Rate: Semi Auto" );
            }else{
                draw_text(mouse_x + 10, mouse_y + 20, "Fire Rate: " + string(itemToDisplay.fireRate) + " per second");
            }
            
        }
        if(itemToDisplay.itemType == equipSlots.HEAD){
            draw_set_color(c_black);
            draw_rectangle(mouse_x, mouse_y, mouse_x + 200, mouse_y + 50,0);
            draw_set_color(c_white);
            draw_text(mouse_x + 10, mouse_y, "Health: " + string(itemToDisplay.health_bonus));
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (point_distance(obj_Player.x, obj_Player.y, x, y) &lt; 100){
    interacting = !interacting;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
