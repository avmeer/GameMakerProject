<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*set boolens for whether or not the enemy can shoot at the player,
if the enemy has bumped into another enemy,
and the health/whether or not enemy has been hit
*/
canShoot = true;
bumped = false ;
hp = 100;
hit = false;
grenadesHitBy = ds_list_create();
aggro = false;
speed = 0;
patrolling = false;
randomize();
aggroForFirstTime = true;

//may want stuff for checking if stuck but still aggro
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_RiflemanSkills.experience += 50;

inst = instance_create(x, y, obj_Blood);

drop_money = random_range(0,10);
if (drop_money &lt; 5){
    instance_create(x,y,obj_Small_Ruble_Pile);
}

itemsArraySize = 8;
potentialItemsArray[0] = obj_Weapon;
potentialItemsArray[1] = obj_testWeapon;
potentialItemsArray[2] = obj_Helmet;
potentialItemsArray[3] = obj_Shotgun;
potentialItemsArray[4] = obj_ChestArmor;
potentialItemsArray[5] = obj_LegArmor;
potentialItemsArray[6] = obj_Boots;
potentialItemsArray[7] = obj_Gloves;
itemIndex = random_range(0,itemsArraySize);
drop_item = random_range(0,100);
if (drop_item &lt; 33){
    instance_create(x,y, potentialItemsArray[itemIndex]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (numBurnsRemaining &gt; 0) {
    hp -= obj_RiflemanSkills.grenadeBurnDmg;
    numBurnsRemaining--;
    if (hp &lt;= 0) {
        audio_play_sound(DeathScream, 10, false);
        instance_destroy();
    }else{
        audio_play_sound(InjuryScream, 10, false);
        alarm[5] = room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>patrolling = false;
speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_delete(grenadesHitBy, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bumped = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (point_distance(x,y,obj_Player.x, obj_Player.y) &lt;= 384 || hit){
    aggro = true;
}

//stop following after a certain time
if(aggro &amp;&amp; point_distance(x,y,obj_Player.x, obj_Player.y) &gt;= 1280){
    aggro = false;
    aggroForFirstTime = true;
    patrolling = false;
}

if(aggro){
    
    //also aggro nearby enemies
    if(aggroForFirstTime == true){
        var i;
        for (i = 0; i &lt; instance_number(obj_Enemy); i += 1){
            enemy[i] = instance_find(obj_Enemy,i);
            if(distance_to_object(enemy[i]) &lt;=500){
                enemy[i].aggro = true;
                enemy[i].aggroForFirstTime = false;
            }
       }
       aggroForFirstTime = false;
    }
    
    //bumping into another enemy causes this enemy to reposition itself
    //move towards the player if a certain distance away
    if (!bumped &amp;&amp; point_distance(x,y,obj_Player.x, obj_Player.y) &gt; 250){
        speed = 7;
        direction = point_direction(x, y, obj_Player.x, obj_Player.y);
    }
    
    //stop once close to player
    if (point_distance(x,y,obj_Player.x, obj_Player.y) &lt;= 250){
        speed = 0;
    }
    
    //shoot at the player if able to
    if (canShoot){
        instance_create(x,y,obj_EnemyBullet);
        canShoot = false;
        alarm[0] = 15;
    } 
}
else if(!patrolling){
    patrolling = true;
    //potentially move around randomly
    randomAngle = random_range(0,360);
    direction = randomAngle;
    speed = 3;
    alarm[4] = room_speed * 1;
}

//same hit shader as player
if (hit &amp;&amp; alarm[1] &lt;= 0) {
   alarm[1] = 0.08 * room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_House">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//enemies cant go through walls
x = xprevious;
y = yprevious;
patrolling = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//enemies cant go through walls
x = xprevious;
y = yprevious;
patrolling = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Grenade_Explosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var inRange = false;
var distance = scr_CalcDistance(x, y, other.x, other.y);
if(other.image_index == 1 &amp;&amp; distance &lt;= other.radius){
    inRange = true;
}

if (inRange) {
    if(ds_list_find_index(grenadesHitBy, other.id) == -1) {
        ds_list_add(grenadesHitBy, other.id);
        alarm[3] = 2 * room_speed;
        hp -= (other.damage - other.damage * distance/other.radius);
        if (other.burnApplied) {
            numBurnsRemaining = other.burnDuration;
            alarm[5] = room_speed;
        }
        if (hp &lt;= 0){
            audio_play_sound(DeathScream, 10, false);
            instance_destroy();
        }else{
            audio_play_sound(InjuryScream, 10, false);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//damage enemy based on bullet damage (which comes from weapon the player is using) and destroy enemy if health falls to 0
//also destroy the bullet that hit the enemy and enable hit boolean
hp -= other.damage;
if (hp &lt;= 0){
    audio_play_sound(DeathScream, 10, false);
    instance_destroy();
}else{
    audio_play_sound(InjuryScream, 10, false);
}

hit = true;
with(other){
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//reposition if bump into another enemy
if (!bumped){
    bumped = true;
    speed = 3;
    direction = -point_direction(x, y, other.x, other.y);
    alarm[2] = 15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//enemies cant go through walls
x = xprevious;
y = yprevious;
patrolling = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//display enemy health above them
//draw_text(x-15,y-60,string(hp));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//display enemy health above them
draw_text(x-15,y-60,string(hp));

//same draw event as player, use hit shader to flash if enemy is shot
if (hit) { 
    shader_set(shd_hit);
    draw_self();  
    shader_reset(); 
} 
else {
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
