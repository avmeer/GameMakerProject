<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Putin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 1000;
hit = false;

currentlyInsulting = true;
currentInsult = "You are going to die little piggy!";
alarm[11] = room_speed * 3;

//timer for going into special mode
alarm[2] = room_speed * 15;

followingPlayer = true;
usingSpecial = false;
specialBulletAngle = 0;
canShoot = true;
grenadesHitBy = ds_list_create();

positionIndex = 0;
firstPosition[0] = room_width / 2;//x
firstPosition[1] = room_height / 2;//y

//upper right
secondPosition[0] = room_width / 2 + 250;
secondPosition[1] = room_height / 2 - 250;

//bottom left
thirdPosition[0] = room_width / 2 - 250;
thirdPosition[1] = room_height / 2 + 250;

//bottom right
fourthPosition[0] = room_width / 2 + 250;
fourthPosition[1] = room_height / 2 + 250;

//top left
fifthPosition[0] = room_width / 2 - 250;
fifthPosition[1] = room_height / 2 - 250;

positionRotations[0] = firstPosition;
positionRotations[1] = secondPosition;
positionRotations[2] = thirdPosition;
positionRotations[3] = fourthPosition;
positionRotations[4] = fifthPosition;
numPositions = 5;


randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_RiflemanSkills.experience += 1000;

inst = instance_create(x, y, obj_Blood);

drop_money = random_range(0,10);
if (drop_money &lt; 5){
    instance_create(x,y,obj_Small_Ruble_Pile);
}

itemsArraySize = 4;
potentialItemsArray[0] = obj_Weapon;
potentialItemsArray[1] = obj_testWeapon;
potentialItemsArray[2] = obj_Helmet;
potentialItemsArray[3] = obj_Shotgun;
itemIndex = random_range(0,itemsArraySize);
drop_item = random_range(0,100);
if (drop_item &lt; 33){
    instance_create(x,y, potentialItemsArray[itemIndex]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentlyInsulting = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_delete(grenadesHitBy, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentInsult = "You aren't dead yet!?"
currentlyInsulting = true;
alarm[11] = room_speed * 3;
followingPlayer = true;
usingSpecial = false;
image_angle = 0;
//change spot where special occurs
positionIndex++;
if(positionIndex == numPositions){
    positionIndex = 0;
}

//timer until special mode
alarm[2] = room_speed * 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentInsult = "Now you are going to get it!"
currentlyInsulting = true;
alarm[11] = room_speed * 3;
followingPlayer = false;
usingSpecial = true;

//stay in special mode for 10 seconds
alarm[3] = room_speed * 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
canShoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//same hit shader as player
if (hit &amp;&amp; alarm[1] &lt;= 0) {
   alarm[1] = 0.08 * room_speed;
}

if (followingPlayer){
    
    speed = 7;
    direction = point_direction(x, y, obj_Player.x, obj_Player.y);

    //stop once close to player
    if (point_distance(x,y,obj_Player.x, obj_Player.y) &lt;= 250){
        speed = 0;
    }
    
    //shoot at the player if able to
    if (canShoot){
        bullet = instance_create(x,y,obj_EnemyBullet);
        bullet.damage = 10;
        canShoot = false;
        alarm[0] = 15;
    }
}else if(usingSpecial){
    image_angle++;
    currentPos = positionRotations[positionIndex];
    speed = 14;
    direction = point_direction(x, y, currentPos[0], currentPos[1]);
    if(point_distance(x,y,currentPos[0], currentPos[1]) &lt; 10){
        speed = 0;
    }
    if (canShoot){
        bullet = instance_create(x,y,obj_EnemyBullet);
        bullet1 = instance_create(x,y,obj_EnemyBullet);
        bullet2 = instance_create(x,y,obj_EnemyBullet);
        bullet3 = instance_create(x,y,obj_EnemyBullet);
        bullet4 = instance_create(x,y,obj_EnemyBullet);
        
        bullet.direction = specialBulletAngle;
        bullet1.direction = specialBulletAngle + 90;
        bullet2.direction = specialBulletAngle + 180;
        bullet3.direction = specialBulletAngle + 270;
        //want direction towards player for bullet4 (default)
        
        bullet.image_angle = specialBulletAngle;
        bullet1.image_angle = specialBulletAngle + 90;
        bullet2.image_angle = specialBulletAngle + 180;
        bullet3.image_angle = specialBulletAngle + 270;
        
        bullet.damage = 10;
        bullet1.damage = 10;
        bullet2.damage = 10;
        bullet3.damage = 10;
        bullet4.damage = 10;
        
        bullet.speed = 16;
        bullet1.speed = 16;
        bullet2.speed = 16;
        bullet3.speed = 16;
        bullet4.speed = 16;
        
        canShoot = false;
        alarm[0] = room_speed * 0.25;
    }
    specialBulletAngle++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Grenade_Explosion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var inRange = false;
var distance = scr_CalcDistance(x, y, other.x, other.y);
if(other.image_index == 1 &amp;&amp; distance &lt;= 75){
    inRange = true;
}

if(inRange) {
    if(ds_list_find_index(grenadesHitBy, other.id) == -1) {
        ds_list_add(grenadesHitBy, other.id);
        alarm[4] = 2 * room_speed;//dsp list deletion
        hp -= (other.damage - other.damage * distance/75);
        if (hp &lt;= 0){
            audio_play_sound(DeathScream, 10, false);
            instance_destroy();
        }else{
            audio_play_sound(InjuryScream, 10, false);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//damage enemy based on bullet damage (which comes from weapon the player is using) and destroy enemy if health falls to 0
//also destroy the bullet that hit the enemy and enable hit boolean
hp -= other.damage;
if (hp &lt;= 0){
    audio_play_sound(DeathScream, 10, false);
    instance_destroy();
}else{
    audio_play_sound(InjuryScream, 10, false);
}

hit = true;
with(other){
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//display enemy health above them
draw_text(x-20,y-60,string(hp));

//same draw event as player, use hit shader to flash if enemy is shot
if (hit) { 
    shader_set(shd_hit);
    draw_self();  
    shader_reset(); 
} 
else {
    draw_self();
}

if(currentlyInsulting){
    draw_text(x + 15, y - 45, currentInsult);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
