<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>experience = 0;
canUpgradeSkill = false;
nextXpRequirement = 100;

// grenade skill var's
grenadeCooldown = 3; // eventually store cooldowns in a 4 element array for easy access in Skill_Bar
grenadeMaxAmmo = 3;
numGrenades = 0;
grenadeDamage = 100;
grenadeRadius = 75;
grenadeBurnDmg = 10;
grenadeBurnDuration = 3;
grenadeBurnApplied = false;
canUpgradeGrenade = false;

// health regen skill var's
healRate = 5;
healDuration = 5;
healCooldown = 15;
canUpgradeHealthRegen = false;

// weapon multiplier skill var's
fireRateMultiplier = 1.2;
bulletDamageMultiplier = 1.2;
applyWeaponMultipliers = false;
weaponMultiplierDuration = 5;
weaponMultiplierCooldown = 15;
canUpgradeWeaponMultiplier = false;

// fortification multiplier skill var's
fortificationModifier = 0.8;
applyFortification = false;
fortificationDuration = 15;
fortificationCooldown = 30;
canUpgradeFortification = false;

/*  index 0,j -&gt; grenade
    index 1,j -&gt; health regen
    index 2,j -&gt; weapon multipliers
    index 3,j -&gt; fortification
    i,0 -&gt; 0 or 1 based on whether or not the skill has been unlocked
    i,1 -&gt; 1 or 2 if first or second skill picked, 0 if neither picked
    i,2 -&gt; 1 or 2, 0 if neither
    i,3 -&gt; 1 or 2, 0 if neither
*/
for (i = 0; i &lt; 4; i++) {
    for (j = 0; j &lt; 4; j++) {
        skills[i,j] = 0;
    }
}
/* index 0 -&gt; xp needed before next grenade upgrade can be unlocked
    index 1 -&gt; xp before health regen upgrade
    index 2 -&gt; xp before weapon multiplier upgrade
    index 3 -&gt; xp before fortification upgrade
*/
for (i = 0; i &lt; 4; i++) {
    xpNeeded[i] = 100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (experience &gt;= nextXpRequirement) {
    canUpgradeSkill = true;
} else {
    canUpgradeSkill = false;
}
if (experience &gt;= xpNeeded[0]) {
    canUpgradeGrenade = true;
} else {
    canUpgradeGrenade = false;
}
if (experience &gt;= xpNeeded[1]) {
    canUpgradeHealthRegen = true;
} else {
    canUpgradeHealthRegen = false;
}
if (experience &gt;= xpNeeded[2]) {
    canUpgradeWeaponMultiplier = true;
} else {
    canUpgradeWeaponMultiplier = false;
}
if (experience &gt;= xpNeeded[3]) {
    canUpgradeFortification = true;
} else {
    canUpgradeFortification = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
