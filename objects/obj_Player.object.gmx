<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health = 100;
maxHealth = 100;
hit = false; //boolean to make player flash when hit by enemy

globalvar numBullets ;
numBullets = 100;

firing = false; // whether the player is holding down shift to fire
fireRateTimerDone = true;

collision = true;

numObj = 0;

reloading = false;

zoomout = false;

moving = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inst = instance_create(x, y, obj_Blood);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_RiflemanSkills.applyFortification = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_RiflemanSkills.applyWeaponMultipliers = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.equippedItems[equipSlots.WEAPON] != -1){
    global.equippedItems[equipSlots.WEAPON].currentAmmo = global.equippedItems[equipSlots.WEAPON].magazineSize;
    reloading = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>collision = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health += obj_RiflemanSkills.healRate;
if (health &gt; maxHealth){
    health = maxHealth;
}

numHeals--;
if (numHeals &gt; 0) {
    alarm[2] = room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fireRateTimerDone = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//for toggling the inventory, only available in testing room as of 2/10/17
/*if (keyboard_check_pressed(ord("I"))){
    showInv = !showInv;
}*/

//monitor player health
if(health &lt;= 0){
    audio_play_sound(DeathScream, 10, false);
    show_message("You died, restarting game");
    game_restart();
}

//player flashes if hit
if (hit &amp;&amp; alarm[0] &lt;= 0) {
   alarm[0] = 0.08 * room_speed; // Flashes for 0.8 seconds before turning back to normal
}









</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_BrownWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_House">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_GrenadeAmmo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_RiflemanSkills.numGrenades + 1 &lt;= obj_RiflemanSkills.grenadeMaxAmmo) {
    with (other) {
        instance_destroy()
    }
    obj_RiflemanSkills.numGrenades++;
    audio_play_sound(ItemPickUp, 0, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_InvisibleWallFar">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Small_Ruble_Pile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other){
    instance_destroy();
}
rubles+=50;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>ItemPickUp</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_BigHealth">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if player health is below their max health, heal and destroy the health pot
if(health &lt; maxHealth){ //maxHealth later on
    with (other){
        instance_destroy();
    }
    health = maxHealth;
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Health">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if player health is below their max health, heal and destroy the health pot
if(health &lt; maxHealth){ //maxHealth later on
    with (other){
        instance_destroy();
    }
}
health += 20;
health = clamp(health,0,maxHealth);//never go above max health

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Weapon">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_itemPickup(other);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_testWeapon">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_itemPickup(other);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_EnemyBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//take damage from the enemy bullet, destroy the enemy bullet
if (obj_RiflemanSkills.applyFortification) {
    health -= obj_RiflemanSkills.fortificationModifier * other.damage;
} else {
    health -= other.damage;
}
hit = true;
with(other){
    instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xprevious;
y = yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_CollideWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>random_get_seed();

quant = random_range(0,100);
if(0 &lt; quant &amp;&amp; quant &lt; 5){
    collision = false;
    alarm[3] = 50;
}

//collision with wall prevents movement through it...for now!
if (collision == true){
    x=xprevious;
    y=yprevious;
}
else {
    audio_play_sound(Tunneling, 0, false);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
moving = false;
if (global.equippedItems[equipSlots.WEAPON] != -1 &amp;&amp; global.equippedItems[equipSlots.WEAPON].canFirePerClick == true) {
    // if the weapon can be fired per click, cancel the fireRateTimer
    fireRateTimerDone = true;
    alarm[1] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!showInv){
    speed = 0;
    // always move towards mouse cursor when right mouse button is held down
    if (!firing &amp;&amp; point_distance(x,y,mouse_x,mouse_y) &gt; 5){
        speed = 10;
        moving = true;
        direction = point_direction(x, y, mouse_x, mouse_y);
    }
    // if able to shoot then shoot
    else if( firing &amp;&amp; global.equippedItems[equipSlots.WEAPON] != -1 &amp;&amp; fireRateTimerDone) 
    {
        
        moving = false;    
    
        if(global.equippedItems[equipSlots.WEAPON].currentAmmo &gt; 0 || 
            obj_RiflemanSkills.applyWeaponMultipliers == true)
        {
            if (obj_RiflemanSkills.applyWeaponMultipliers != true) {
                global.equippedItems[equipSlots.WEAPON].currentAmmo--;
            }
            // alter the damage of bullet created to reflect weapon damage
            currWeapon = global.equippedItems[equipSlots.WEAPON];
            
            if(global.equippedItems[equipSlots.WEAPON].typeOfWeapon  == weaponType.PISTOL
                || global.equippedItems[equipSlots.WEAPON].typeOfWeapon  == weaponType.AR)
            {
                bullet = instance_create( x, y - 0.5 * sprite_height, obj_Bullet );
                if (obj_RiflemanSkills.applyWeaponMultipliers == true) {
                    bullet.damage = currWeapon.damage * obj_RiflemanSkills.bulletDamageMultiplier;
                } else {
                    bullet.damage = currWeapon.damage;
                }
            }
            else if(global.equippedItems[equipSlots.WEAPON].typeOfWeapon  == weaponType.SHOTGUN)
            {
                bullet1 = instance_create( x, y - 0.5 * sprite_height, obj_Bullet );
                bullet2 = instance_create( x, y - 0.5 * sprite_height, obj_Bullet );
                bullet3 = instance_create( x, y - 0.5 * sprite_height, obj_Bullet );
                bullet4 = instance_create( x, y - 0.5 * sprite_height, obj_Bullet );
                bullet5 = instance_create( x, y - 0.5 * sprite_height, obj_Bullet );
                bullet2.direction += 7;
                bullet3.direction += 14;
                bullet4.direction -= 7;
                bullet5.direction -= 14;
                bullet2.image_angle = bullet2.direction;
                bullet3.image_angle = bullet3.direction;
                bullet4.image_angle = bullet5.direction;
                bullet5.image_angle = bullet5.direction;
                if (obj_RiflemanSkills.applyWeaponMultipliers == true) {
                    bullet1.damage = currWeapon.damage * obj_RiflemanSkills.bulletDamageMultiplier;
                    bullet2.damage = currWeapon.damage * obj_RiflemanSkills.bulletDamageMultiplier;
                    bullet3.damage = currWeapon.damage * obj_RiflemanSkills.bulletDamageMultiplier;
                    bullet4.damage = currWeapon.damage * obj_RiflemanSkills.bulletDamageMultiplier;
                    bullet5.damage = currWeapon.damage * obj_RiflemanSkills.bulletDamageMultiplier;
                } else {
                    bullet1.damage = currWeapon.damage;
                    bullet2.damage = currWeapon.damage;
                    bullet3.damage = currWeapon.damage;
                    bullet4.damage = currWeapon.damage;
                    bullet5.damage = currWeapon.damage;
                }
                bullet1.sprite_index = spr_Pellet;
                bullet2.sprite_index = spr_Pellet;
                bullet3.sprite_index = spr_Pellet;
                bullet4.sprite_index = spr_Pellet;
                bullet5.sprite_index = spr_Pellet;
            }
            
            // ensures appropriate weapons can't be fired per click
            fireRateTimerDone = false;
            if (obj_RiflemanSkills.applyWeaponMultipliers == true) {
                alarm[1] = 1 / (currWeapon.fireRate * obj_RiflemanSkills.fireRateMultiplier) *
                    room_speed;
            } else {
                alarm[1] = 1 / currWeapon.fireRate * room_speed;
            }
        }//end check for ammo &gt; 0
        else if(global.equippedItems[equipSlots.WEAPON].currentAmmo == 0 &amp;&amp; !reloading)
        {
            reloading = true;
            alarm[4] = room_speed * 2;
        }
    }
}else{
    speed = 0;
    moving = false;
}// disable player controls if in inventory
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//simple gui for testing purposes that displays ammo and health of player
var yOff = 600;
var xOff = 100;

draw_set_alpha(0.8);
draw_set_color(c_black);
if (obj_RiflemanSkills.canUpgradeSkill == false || !scr_CanUpgrade()) {
    draw_rectangle(150 - xOff ,64 + yOff ,375 - xOff ,124 + yOff ,false);
} else {
    draw_rectangle(150 - xOff ,64 + yOff ,375 - xOff ,139 + yOff ,false);
}
draw_set_alpha(1);
draw_set_color(c_white);
if(global.equippedItems[equipSlots.WEAPON] != -1){
    if(reloading){
        draw_text(150 - xOff ,64+ yOff ,"Reloading");
    }else{
        draw_text(150 - xOff ,64+ yOff ,"Ammo: "+string(global.equippedItems[equipSlots.WEAPON].currentAmmo));
    }
}else{
    draw_text(150 - xOff ,64+ yOff ,"No Weapon");
}

draw_text(150 - xOff ,79+ yOff ,"Grenades: "+string(obj_RiflemanSkills.numGrenades));
draw_text(150 - xOff ,93+ yOff ,"Health: "+string(obj_Player.health) + " / " + string(maxHealth));
draw_text(150 - xOff, 109 + yOff, "Exp: " + string(obj_RiflemanSkills.experience));
if (obj_RiflemanSkills.canUpgradeSkill == true &amp;&amp; scr_CanUpgrade()) {
    draw_text(160 - xOff, 124 + yOff, "Skill Available!");
}

numObj = 0;
for (i = 0; i &lt; 4; i++){
    for (j = 0; j &lt; 4; j++){
        if (global.inventory[i,j] != -1){
            numObj++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//drawing player depends on whether or not hit, if hit use the hit shader
if (hit) { 
    shader_set(shd_hit);
    if(moving == true){
        draw_self();
    }else{
        draw_sprite(spr_Player,0,x,y);
    }
      
    shader_reset();
}
else {
    if(moving == true){
        draw_self();
    }else{
        draw_sprite(spr_Player,0,x,y);
    }
}

if (obj_RiflemanSkills.applyFortification) {
    draw_sprite(spr_PlayerShield, 0, x, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.previousRoom = room;
room_goto(rm_RiflemanSkillTree);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.equippedItems[equipSlots.WEAPON] != -1 &amp;&amp; !reloading){
    if(global.equippedItems[equipSlots.WEAPON].currentAmmo != global.equippedItems[equipSlots.WEAPON].magazineSize){
        reloading = true;
        global.equippedItems[equipSlots.WEAPON].currentAmmo = 0;
        alarm[4] = room_speed * 2;
    }
    
    
    //Play a reload sound
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!showInv) {
    if (obj_RiflemanSkills.skills[3,0] != 0) {
        if (obj_Skill_Bar.skill_4_cooling_down == false) {
            obj_RiflemanSkills.applyFortification = true;
            alarm[6] = obj_RiflemanSkills.fortificationDuration * room_speed;
            obj_Skill_Bar.skill_4_cooling_down = true;
            obj_Skill_Bar.alarm[3] = obj_Skill_Bar.skill_4_time;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!showInv) {
    if(obj_RiflemanSkills.skills[2,0] != 0) {
        if(obj_Skill_Bar.skill_3_cooling_down == false) {
            obj_RiflemanSkills.applyWeaponMultipliers = true;
            alarm[5] = obj_RiflemanSkills.weaponMultiplierDuration * room_speed;
            obj_Skill_Bar.skill_3_cooling_down = true;
            obj_Skill_Bar.alarm[2] = obj_Skill_Bar.skill_3_time;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!showInv) {
    if(obj_RiflemanSkills.skills[1,0] != 0) {
        if(obj_Skill_Bar.skill_2_cooling_down == false) {
            healing = true;
            numHeals = obj_RiflemanSkills.healDuration;
            alarm[2] = room_speed;
            obj_Skill_Bar.skill_2_cooling_down = true;
            obj_Skill_Bar.alarm[1] = obj_Skill_Bar.skill_2_time;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!showInv){
    if(obj_RiflemanSkills.skills[0,0] != 0) {
        if(obj_RiflemanSkills.numGrenades &gt; 0 &amp;&amp; obj_Skill_Bar.skill_1_cooling_down == false) {
            grenade = instance_create(x, y - 0.5 * sprite_height, obj_Grenade);
            grenade.targetX = mouse_x;
            grenade.targetY = mouse_y;
            angleToTarget = point_direction(x,y - 0.5 * sprite_height, mouse_x, mouse_y);
            grenade.speed = 5;
            grenade.direction = angleToTarget;
            obj_Skill_Bar.skill_1_cooling_down = true;
            obj_Skill_Bar.alarm[0] = obj_Skill_Bar.skill_1_time;
            
            obj_RiflemanSkills.numGrenades--;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firing = true;
moving = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firing = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
