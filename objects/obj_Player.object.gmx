<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health = 100;
hit = false; //boolean to make player flash when hit by enemy

//used to be B
globalvar numBullets ; // number of bullets
numBullets = 100;
numGrenades = 3;

collision = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>collision = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//for toggling the inventory, only available in testing room as of 2/10/17
if (keyboard_check_pressed(ord("I"))){
    showInv = !showInv;
}

//player controls only applicable if not in inventory
//consider changing to state machine script later, as of now preliminary inventory testing
if(!showInv){
    shiftClick = mouse_check_button_pressed(mb_left) &amp;&amp; keyboard_check(vk_shift);
    normalClick = mouse_check_button(mb_left) &amp;&amp; !keyboard_check(vk_shift);
    speed = 0;
    //always move towards mouse cursor when right mouse button is held down
    if (normalClick &amp;&amp; point_distance(x,y,mouse_x,mouse_y) &gt; 5){
        speed = 10;
        direction = point_direction(x, y, mouse_x, mouse_y);
    }
    //if able to shoot then shoot
    else if( shiftClick &amp;&amp; instance_number(obj_Bullet) &lt; numBullets &amp;&amp; 
        global.equippedItems[equipSlots.WEAPON] != -1) 
    {
            bullet = instance_create( x, y, obj_Bullet );
            //alter the damage of bullet created to reflect weapon damage
            bullet.damage = global.equippedItems[equipSlots.WEAPON].damage;
        
    }
}else{speed = 0;}//disable player controls if in inventory

//monitor player health
if(health &lt;= 0){
    audio_play_sound(DeathScream, 10, false);
    show_message("You died, restarting game");
    game_restart();
}

//player flashes if hit
if (hit &amp;&amp; alarm[0] &lt;= 0) {
   alarm[0] = 0.08 * room_speed; // Flashes for 0.8 seconds before turning back to normal
}

if (keyboard_check_pressed(vk_right) &amp;&amp; room != room_last){
    room_goto_next();
}

if (keyboard_check_pressed(vk_left) &amp;&amp; room != room_first){
    room_goto_previous();
}









</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_GrenadeAmmo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(numGrenades + 1 &lt; 4) {
    with (other) {
        instance_destroy()
    }
    numGrenades++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Health">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if player health is below their max health, heal and destroy the health pot
if(health &lt; 100){ //maxHealth later on
    with (other){
        instance_destroy();
    }
}
health += 20;
health = clamp(health,0,100);//never go above max health

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Weapon">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_itemPickup(other);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_testWeapon">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_itemPickup(other);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_EnemyBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//take damage from the enemy bullet, destroy the enemy bullet
with(other){
    instance_destroy();
}
health -= 1;
hit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>random_get_seed();

quant = random_range(0,100);
if(0 &lt; quant &amp;&amp; quant &lt; 5){
    collision = false;
    alarm[3] = 50;
}

//collision with wall prevents movement through it...for now!
if (collision == true){
    x=xprevious;
    y=yprevious;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(numGrenades &gt; 0) {
    instance_create(mouse_x, mouse_y, obj_Grenade)
    numGrenades--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//simple gui for testing purposes that displays ammo and health of player
draw_text(150,64,"Bullets: "+string(numBullets - instance_number(obj_Bullet)));
draw_text(150,79,"Grenades: "+string(numGrenades));
draw_text(255,64,"Health: "+string(obj_Player.health));
draw_text(400,64,"Room: "+string(room));
draw_text(700,64,"Collision: "+string(collision));
numObj = 0;
for (i = 0; i &lt; 4; i++){
    for (j = 0; j &lt; 4; j++){
        if (global.inventory[i,j] != -1){
            numObj++;
        }
    }
}
draw_text(500,64,"Inv Size: "+string(numObj));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//drawing player depends on whether or not hit, if hit use the hit shader
if (hit) { 
    shader_set(shd_hit);   
    draw_self();  
    shader_reset();
}
else {
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
