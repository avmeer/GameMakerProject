<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grenadeX = 128;
xOffset = 256;
initialY = 256;
yOffset = 256;

healthX = grenadeX + xOffset;

weaponMultiplierX = healthX + xOffset;

grenadeSkillUnlocked = obj_RiflemanSkills.skills[0,0];

// if grenade skill is locked
if (grenadeSkillUnlocked == 0) {
    instance_create(grenadeX, initialY, obj_GrenadeUnlock);
} else if (grenadeSkillUnlocked == 1) {
    grenadeTier2Skill = obj_RiflemanSkills.skills[0,1];
    // if no tier 2 skill has been chosen
    if (grenadeTier2Skill == 0) {
        instance_create(grenadeX, initialY, obj_GrenadeAmmoInc);
        instance_create(grenadeX, initialY + yOffset, obj_GrenadeDmgInc);
    } else {
        grenadeTier3Skill = obj_RiflemanSkills.skills[0,2];
        if (grenadeTier3Skill == 0) {
            instance_create(grenadeX, initialY, obj_GrenadeRadiusInc);
            instance_create(grenadeX, initialY + yOffset, obj_GrenadeBurnDmg);
        }
    }
}

healthRegenUnlocked = obj_RiflemanSkills.skills[1,0];

// if health regen skill is locked
if (healthRegenUnlocked == 0) {
    instance_create(healthX, initialY, obj_HealthRegenUnlock);
} else {
    healthRegenTier2 = obj_RiflemanSkills.skills[1,1];
    // if no tier 2 skill has been chosen
    if (healthRegenTier2 == 0) {
        instance_create(healthX, initialY, obj_HRCooldownDec);
        instance_create(healthX, initialY + yOffset, obj_HRHeal_Inc);
    }
}

weaponMultiplierUnlocked = obj_RiflemanSkills.skills[2,0];

// if weapon multiplier skill is locked
if (weaponMultiplierUnlocked == 0) {
    instance_create(weaponMultiplierX, initialY, obj_WeaponMultiplierUnlock);
} else {
    weaponMultiplierTier2 = obj_RiflemanSkills.skills[2,1];
    // if no tier 2 skill has been chosen
    if (weaponMultiplierTier2 == 0) {
        instance_create(weaponMultiplierX, initialY, obj_WMFireRateInc);
        instance_create(weaponMultiplierX, initialY + yOffset, obj_WMDamageInc);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);

for (i = 1; i &lt; 4; i++) {
    draw_line(1024 * i/4, 100, 1024 * i/4, 768);
}

// if grenade skill is locked
if (grenadeSkillUnlocked == 0) {
    draw_sprite(spr_GrenadeLarge, 0, grenadeX, initialY);
} else if (grenadeSkillUnlocked == 1) {
    // if no tier 2 skill has been chosen
    if (grenadeTier2Skill = 0) {
        draw_sprite(spr_GrenadeLarge, 0, grenadeX - 8, initialY - 4);
        draw_sprite(spr_GrenadeLarge, 0, grenadeX + 8, initialY + 4);
        draw_sprite(spr_GrenadeLarge, 0, grenadeX, initialY + yOffset);
    } else if (grenadeTier3Skill = 0) {
        draw_sprite(spr_GrenadeLarge, 0, grenadeX, initialY);
        draw_sprite(spr_GrenadeLarge, 0, grenadeX, initialY + yOffset);
    } else {
        no = "No";
        upgrades = "upgrades";
        remaining = "remaining!";
        draw_text(grenadeX - string_width(no) / 2, initialY, no);
        draw_text(grenadeX - string_width(upgrades) / 2, initialY + 15, upgrades);
        draw_text(grenadeX - string_width(remaining) / 2, initialY + 30, remaining);
    }
}

// if health regen is locked
if (healthRegenUnlocked == 0) {
    draw_sprite_ext(spr_Health, 0, healthX, initialY, 3, 3, 0, c_white, 1);
} else {
    if (healthRegenTier2 == 0) {
        draw_sprite_ext(spr_Health, 0, healthX, initialY, 3, 3, 0, c_white, 1);
        draw_sprite_ext(spr_Health, 0, healthX, initialY + yOffset, 3, 3, 0, c_white, 1);
    } else {
        no = "No";
        upgrades = "upgrades";
        remaining = "remaining!";
        draw_text(healthX - string_width(no) / 2, initialY, no);
        draw_text(healthX - string_width(upgrades) / 2, initialY + 15, upgrades);
        draw_text(healthX - string_width(remaining) / 2, initialY + 30, remaining);
    }
}

if (weaponMultiplierUnlocked == 0) {
    draw_sprite(spr_AR15, 0, weaponMultiplierX, initialY);
} else {
    if (weaponMultiplierTier2 == 0) {
        draw_sprite(spr_AR15, 0, weaponMultiplierX, initialY);
        draw_sprite(spr_AR15, 0, weaponMultiplierX, initialY + yOffset);
    } else {
        no = "No";
        upgrades = "upgrades";
        remaining = "remaining!";
        draw_text(weaponMultiplierX - string_width(no) / 2, initialY, no);
        draw_text(weaponMultiplierX - string_width(upgrades) / 2, initialY + 15, upgrades);
        draw_text(weaponMultiplierX - string_width(remaining) / 2, initialY + 30, remaining);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(global.previousRoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
